version: 2.1
orbs:
  circleci-tailscale: threecomma/circleci-tailscale@2.2.0

commands: # a reusable command with parameters
  with-cargo-cache:
    parameters:
      do:
        default: []
        type: steps
    steps:
      - restore_cache:
          keys:
            - v3-cargo-cache-{{ arch }}-{{ checksum "Cargo.lock" }}

      - steps: << parameters.do >>

      - save_cache:
          key: v3-cargo-cache-{{ arch }}-{{ checksum "Cargo.lock" }}
          paths:
            - /usr/local/cargo
            - target
jobs:
  lint-rust:
    docker:
      - image: rust:latest
    resource_class: medium
    steps:
      - checkout

      - run:
          name: Print Rust Versions
          command: rustc --version; cargo --version; rustup --version

      - run:
          name: Install Rust Format
          command: rustup component add rustfmt

      - run:
          name: Test Formatting
          command: cargo fmt -- --check
  test-rust:
    docker:
      - image: rust:latest
    resource_class: medium
    steps:
      - checkout

      - run:
          name: Print Rust Versions
          command: rustc --version; cargo --version; rustup --version

      - with-cargo-cache:
          do:
            - run:
                name: Build
                command: cargo build --locked --all-targets --jobs 2

      - run:
          name: Run Tests
          command: cargo test --locked

      - run:
          name: Build Docs
          command: cargo doc --workspace

      - run:
          name: Clippy
          command: rustup component add clippy && cargo clippy --workspace
  build-release:
    docker:
      - image: rust:latest
    resource_class: medium
    steps:
      - checkout

      - run:
          name: Print Rust Versions
          command: rustc --version; cargo --version; rustup --version

      - with-cargo-cache:
          do:
            - run:
                name: Build
                command: cargo build --locked --all-targets  --release --jobs 2

      - store_artifacts:
          path: target/release/web-axum
          destination: web-axum
      - store_artifacts:
          path: target/release/web-rocket
          destination: web-rocket
      - persist_to_workspace:
          root: target
          paths:
            - release/web-axum
            - release/web-rocket

  deploy:
    docker:
      - image: rust:latest
    resource_class: small
    steps:
      - add_ssh_keys
      - attach_workspace:
          at: target
      - circleci-tailscale/connect
      - run: scp target/web-axum coreyja@terrarium.coreyja.gmail.com.beta.tailscale.net:~/server/web-axum

  bench:
    docker:
      - image: rust:latest
    resource_class: medium
    steps:
      - checkout

      - run:
          name: Print Rust Versions
          command: rustc --version; cargo --version; rustup --version

      - with-cargo-cache:
          do:
            - run: cd battlesnake-rs/
            - restore_cache:
                keys:
                  - v2-criterion-baseline
            - run: cargo bench
            - store_artifacts:
                path: target/criterion
                destination: criterion

  profile:
    docker:
      - image: rust:latest
    resource_class: medium
    steps:
      - checkout

      - run:
          name: Print Rust Versions
          command: rustc --version; cargo --version; rustup --version

      - run: cd battlesnake-rs/
      # - run: cargo bench --bench devin -- --profile-time 60
      - run: cargo bench --bench hobbs -- --profile-time 60
      - run: cargo bench --bench mcts -- --profile-time 60
      # - run: cargo bench --bench a-prime -- --profile-time 60
      # - run: cargo bench --bench flood-fill -- --profile-time 60
      - store_artifacts:
          path: target/criterion
          destination: criterion
workflows:
  version: 2
  ci:
    jobs:
      - test-rust
      - lint-rust
      - deploy:
          requires:
            - test-rust
            - lint-rust
            - build-release
          filters:
            branches:
              only:
                - 'main'
      - build-release:
          filters:
            branches:
              only:
                - 'main'
      - profile:
          filters:
            branches:
              only:
                - main
                - /.*profile.*/
      - bench:
          filters:
            branches:
              only:
                - main
                - /.*bench.*/
