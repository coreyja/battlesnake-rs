version: 2.1
jobs:
  lint-rust:
    docker:
      - image: rust:latest
    resource_class: small
    steps:
      - checkout

      - run:
          name: Print Rust Versions
          command: rustc --version; cargo --version; rustup --version

      - run:
          name: Install Rust Format
          command: rustup component add rustfmt

      - run:
          name: Test Formatting
          command: cargo fmt -- --check
  test-rust:
    docker:
      - image: rust:latest
    resource_class: small
    steps:
      - checkout

      - run:
          name: Print Rust Versions
          command: rustc --version; cargo --version; rustup --version

      - restore_cache:
          keys:
            - v2-cargo-cache-{{ arch }}-{{ checksum "Cargo.lock" }}

      - run:
          name: Build
          command: cargo build --locked --all-targets

      - run:
          name: Run Tests
          command: cargo test --locked

      - run:
          name: Build Docs
          command: cargo doc --workspace

      - run:
          name: Clippy
          command: cargo clippy --workspace

      - save_cache:
          key: v2-cargo-cache-{{ arch }}-{{ checksum "Cargo.lock" }}
          paths:
            - /usr/local/cargo
            - target/debug
  build-release:
    docker:
      - image: rust:latest
    resource_class: small
    steps:
      - checkout

      - run:
          name: Print Rust Versions
          command: rustc --version; cargo --version; rustup --version

      - restore_cache:
          keys:
            - v2-cargo-cache-build-{{ arch }}-{{ checksum "Cargo.lock" }}

      - run:
          name: Build
          command: cargo build --locked --all-targets --release

      - save_cache:
          key: v2-cargo-cache-build-{{ arch }}-{{ checksum "Cargo.lock" }}
          paths:
            - /usr/local/cargo
            - target/debug
      - store_artifacts:
          path: target/web-axum
          destination: web-axum
      - store_artifacts:
          path: target/web-rocket
          destination: web-rocket

  bench:
    docker:
      - image: rust:latest
    resource_class: medium
    steps:
      - checkout

      - run:
          name: Print Rust Versions
          command: rustc --version; cargo --version; rustup --version

      - restore_cache:
          keys:
            - v2-cargo-cache-{{ arch }}-{{ checksum "Cargo.lock" }}

      - run: cd battlesnake-rs/
      - restore_cache:
          keys:
            - v2-criterion-baseline

      - run: cargo bench

      - store_artifacts:
          path: target/criterion
          destination: criterion

  profile:
    docker:
      - image: rust:latest
    resource_class: medium
    steps:
      - checkout

      - run:
          name: Print Rust Versions
          command: rustc --version; cargo --version; rustup --version

      - restore_cache:
          keys:
            - v2-cargo-cache-{{ arch }}-{{ checksum "Cargo.lock" }}

      - run: cd battlesnake-rs/
      # - run: cargo bench --bench devin -- --profile-time 60
      - run: cargo bench --bench hobbs -- --profile-time 60
      - run: cargo bench --bench mcts -- --profile-time 60
      # - run: cargo bench --bench a-prime -- --profile-time 60
      # - run: cargo bench --bench flood-fill -- --profile-time 60
      - store_artifacts:
          path: target/criterion
          destination: criterion
workflows:
  version: 2
  ci:
    jobs:
      - test-rust
      - lint-rust
      - build-release:
          requires:
            - test-rust
            - lint-rust
          filters:
            branches:
              only:
                - 'main'
      - profile:
          filters:
            branches:
              only:
                - main
                - /.*profile.*/
      - bench:
          filters:
            branches:
              only:
                - main
                - /.*bench.*/
